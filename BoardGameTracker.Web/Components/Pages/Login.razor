@page "/login"

@using System.ComponentModel.DataAnnotations
@inject AuthenticationApiClient AuthApiClient
@inject NavigationManager NavigationManager

<h3>Login</h3>

<EditForm Model="loginModel" OnValidSubmit="HandleLogin" FormName="LoginForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Email:</label>
        <InputText @bind-Value="loginModel.Email" />
    </div>
    <div>
        <label>Password:</label>
        <InputText @bind-Value="loginModel.Password" Type="password" />
    </div>
    <button type="submit">Login</button>
</EditForm>

@if (errorMessage != null)
{
    <p style="color: red;">@errorMessage</p>
}

@code {
    private string? errorMessage;

    [SupplyParameterFromForm]
    private LoginModel? loginModel { get; set; }

    protected override void OnInitialized() => loginModel ??= new();

    private async Task HandleLogin()
    {
        var user = await AuthApiClient.GetUserAsync(loginModel.Email);
        if (user != null)
        {
            // Redirect to a protected page
            NavigationManager.NavigateTo("/");
        }
        else
        {
            errorMessage = "Invalid email or password.";
        }
    }

    private class LoginModel
    {
        [Required(ErrorMessage = "Email is required.")]
        [EmailAddress(ErrorMessage = "Invalid email address.")]
        public string Email { get; set; } = string.Empty;
        [Required(ErrorMessage = "Password is required.")]
        public string Password { get; set; } = string.Empty;
    }
}
